scalar TagID
scalar TagName

type Tag {
    id: TagID!
    name: TagName!
    description: String!
}

input NewTag {
    name: TagName!
    description: String!
}

input TagFilter {
    limit: Int
    offset: Int
    order: Order
    search: String
    ids: [TagID!]
}

extend type Query {
    getTag(tagID: TagID!): Tag
    getTags(filter: TagFilter): [Tag!]!
}

### Mutations

extend type Mutation {
    createTag(tagName: TagName!, description: String!): Tag @canManageTags @isLoggedIn
    createMultipleTags(tagNames: [NewTag!]!): [Tag!]! @canManageTags @isLoggedIn
    updateTag(tagID: TagID!, NewName: TagName!, description: String!): Tag! @canManageTags @isLoggedIn
    deleteTag(tagID: TagID!): Boolean! @canManageTags @isLoggedIn
}